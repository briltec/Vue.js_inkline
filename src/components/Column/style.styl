@import '../../resources/stylus/config';
@import '../../resources/stylus/mixins';

.col, .column
    box-sizing: border-box
    flex: 0 0 auto
    min-height: 1px
    position: relative
    // Prevent columns from becoming too narrow when at smaller grid tiers by
    // always setting `width: 100%`. This works because we use `flex` values
    // later on to override this initial width.
    width: 100%
    flex-basis: 0
    flex-grow: 1
    max-width: 100%

    for --breakpoint-name, --gutter-width in --gutter
        +-breakpoint-up(--breakpoint-name)
            padding-left: (--gutter-width / 2)
            padding-right: (--gutter-width / 2)

    // Column Responsive Sizes
    //
    for --breakpoint-name, --breakpoint-value in --breakpoints
        --breakpoint = -breakpoint-infix(--breakpoint-name)

        +-breakpoint-up(--breakpoint-name)
            &.-first{--breakpoint}
                order: -1

            &.-last{--breakpoint}
                order: 1

        for --column-count in 1..--columns
            +-breakpoint-up(--breakpoint-name)
                // Flex columns
                //
                &.{--breakpoint}
                    flex-basis: 0
                    flex-grow: 1
                    max-width: 100%

                // Column width
                //
                &.{--breakpoint}-{--column-count}
                    flex-basis: percentage(--column-count / --columns)
                    // Add a `max-width` to ensure content within each column does not blow out
                    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
                    // do not appear to require this.
                    max-width: percentage(--column-count / --columns)

                // Column offset
                //
                &.-offset{--breakpoint}-{--column-count}
                    margin-left: percentage(--column-count / --columns)

                // Column push
                //
                &.-push{--breakpoint}-{--column-count}
                    left: percentage(--column-count / --columns)

                // Column pull
                //
                &.-pull{--breakpoint}-{--column-count}
                    right: percentage(--column-count / --columns)
