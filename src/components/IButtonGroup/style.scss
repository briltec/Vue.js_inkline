@import '../../css/variables';
@import '../../css/mixins';

/**
 * Button Group
 */

.button-group {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    box-sizing: border-box;

    .button {
        position: relative;
        flex: 0 1 auto;
        z-index: 0;
        margin-right: 0;
        font-size: var(----font-size);
        padding: var(----padding);

        &:hover,
        &:focus,
        &:active,
        &.-active {
            z-index: 1;
        }

        &.-circle {
            border-radius: 100%;
            width: var(----circle--size);
            height: var(----circle--size);
            padding: 0;
        }
    }

    > .button:first-child {
        margin-left: 0;
    }

    &.-block {
        display: flex;
        flex-basis: 100%;

        > .button {
            flex-basis: 100%;
        }
    }

    > .button,
    > .button-group > .button,
    > [class$="-wrapper"] .button {
        border-radius: 0;
    }

    // Reset rounded corners
    &:not(.-vertical) {
        > .button:last-child,
        > [class$="-wrapper"]:last-child > * > .button:last-child {
            border-top-right-radius: var(----border-top-right-radius);
            border-bottom-right-radius: var(----border-bottom-right-radius);
        }

        > .button:first-child,
        > [class$="-wrapper"]:first-child > * > .button:first-child {
            border-top-left-radius: var(----border-top-left-radius);
            border-bottom-left-radius: var(----border-bottom-left-radius);
        }

        > .button:not(:last-child),
        > .button-group:not(:last-child) .button,
        > [class$="-wrapper"]:not(:last-child) > * > .button,
        > .button-group:not(:last-child) [class$="-wrapper"] > * > .button {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            border-right: 0;
        }

        > .button:not(:first-child),
        > .button-group:not(:first-child) .button,
        > [class$="-wrapper"]:not(:first-child) > * > .button,
        > .button-group:not(:first-child) [class$="-wrapper"] > * > .button {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    &.-vertical {
        flex-direction: column;
        align-items: flex-start;
        justify-content: center;

        .button,
        .button-group,
        [class$="-wrapper"] {
            width: 100%;
        }

        > .button:last-child,
        > [class$="-wrapper"]:last-child > * > .button:last-child {
            border-bottom-left-radius: var(----border-bottom-left-radius);
            border-bottom-right-radius: var(----border-bottom-right-radius);
        }

        > .button:first-child,
        > [class$="-wrapper"]:first-child > * > .button:first-child {
            border-top-left-radius: var(----border-top-left-radius);
            border-top-right-radius: var(----border-top-right-radius);
        }

        > .button:not(:last-child),
        > .button-group:not(:last-child) .button,
        > [class$="-wrapper"]:not(:last-child) > * > .button,
        > .button-group:not(:last-child) [class$="-wrapper"] > * > .button {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
            border-bottom: 0;
        }

        > .button:not(:first-child),
        > .button-group:not(:first-child) .button,
        > [class$="-wrapper"]:not(:first-child) > * > .button,
        > .button-group:not(:first-child) [class$="-wrapper"] > * > .button {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
    }
}
